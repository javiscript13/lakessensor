version: '3'

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_traefik: {}
  production_django_media: {}

services:
  mqtt:
    build:
      context: .
      dockerfile: ./compose/production/mqtt/Dockerfile
    image: lakessensor_production_mqtt
    container_name: lakessensor_production_mqtt
    depends_on:
      - django
    volumes:
      - ./mqtt_listener:/app:z
    env_file:
      - ./.envs/.production/.mqtt
    command: /start

  django:
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile

    image: lakessensor_production_django
    volumes:
      - production_django_media:/app/lakessensor/media
    depends_on:
      - postgres
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    command: /start
    ports:
      - "8000:8000"

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: lakessensor_production_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data
      - production_postgres_data_backups:/backups
    env_file:
      - ./.envs/.production/.postgres

#  traefik:
#    build:
#      context: .
#      dockerfile: ./compose/production/traefik/Dockerfile
#    image: lakessensor_production_traefik
#    depends_on:
#      - django
#    volumes:
#      - production_traefik:/etc/traefik/acme
#    ports:
#      - '0.0.0.0:80:80'
#      - '0.0.0.0:443:443'

  nginx:
    build:
      context: .
      dockerfile: ./compose/production/nginx/Dockerfile
    image: lakessensor_local_nginx
    depends_on:
      - django
    volumes:
      - production_django_media:/usr/share/nginx/media:ro
  
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: lakessensor_frontend
    container_name: lakessensor_frontend
    volumes:
      - ./frontend:/app
    ports:
      - "3000:3000"
